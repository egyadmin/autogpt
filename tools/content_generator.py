"""
ุฃุฏุงุฉ ูุฅูุดุงุก ูุญุชูู ูุชููุน
"""
import json
from typing import List, Dict, Any, Optional
from .tool import Tool

class ContentGeneratorTool(Tool):
    """ุฃุฏุงุฉ ูุฅูุดุงุก ูุญุชูู ูุชููุน ูุซู ุงููุตูุต ูุงูููุงูุงุช ูุงูุชูุงุฑูุฑ"""
    
    def __init__(self):
        super().__init__(
            name="ContentGeneratorTool",
            description="ุฃุฏุงุฉ ูุฅูุดุงุก ูุญุชูู ูุชููุน ูุซู ุงููุตูุต ูุงูููุงูุงุช ูุงูุชูุงุฑูุฑ"
        )
    
    def run(self, query: str, params: Optional[str] = None) -> str:
        """ุฅูุดุงุก ูุญุชูู ุจูุงุกู ุนูู ุงููุฏุฎูุงุช"""
        try:
            content_type = "general"
            length = "medium"
            tone = "neutral"
            
            if params:
                content_params = json.loads(params)
                content_type = content_params.get("type", content_type)
                length = content_params.get("length", length)
                tone = content_params.get("tone", tone)
                
            return self._generate_content(query, content_type, length, tone)
        
        except Exception as e:
            return f"ุฎุทุฃ ูู ุฅูุดุงุก ุงููุญุชูู: {str(e)}"
    
    def _generate_content(self, topic: str, content_type: str, length: str, tone: str) -> str:
        """ูุญุงูุงุฉ ุฅูุดุงุก ูุญุชูู"""
        
        # ุชุนุฏูู ุทูู ุงููุญุชูู
        if length == "short":
            paragraphs = 2
        elif length == "medium":
            paragraphs = 4
        elif length == "long":
            paragraphs = 8
        else:
            paragraphs = 3
            
        # ุฅูุดุงุก ูุญุชูู ูุฎุชูู ุญุณุจ ุงูููุน
        if content_type == "article":
            return self._generate_article(topic, paragraphs, tone)
        elif content_type == "report":
            return self._generate_report(topic, paragraphs, tone)
        elif content_type == "social_post":
            return self._generate_social_post(topic, tone)
        else:
            return self._generate_general_content(topic, paragraphs, tone)
    
    def _generate_article(self, topic: str, paragraphs: int, tone: str) -> str:
        """ุฅูุดุงุก ููุงู"""
        title = f"ููุงู ุนู: {topic}"
        
        intro = f"ููุฏูุฉ ุชูุงูุด ุฃูููุฉ ููุถูุน {topic} ูุชุฃุซูุฑู ุนูู ุงููุฌุงูุงุช ุงููุฎุชููุฉ. "
        intro += f"ุณูุชูุงูู ูู ูุฐุง ุงูููุงู ุงูุฌูุงูุจ ุงููุฎุชููุฉ ูู {topic} ูุน ุงูุชุฑููุฒ ุนูู ุงูุชุทูุฑุงุช ุงูุญุฏูุซุฉ."
        
        body_paragraphs = []
        for i in range(paragraphs - 2):
            body_paragraphs.append(f"ููุฑุฉ {i+1}: ูุนูููุงุช ูุชุญูููุงุช ูุชุนููุฉ ุญูู {topic}. "
                                  f"ุชูุงูุด ูุฐู ุงูููุฑุฉ ุฌุงูุจุงู ูููุงู ูู ุฌูุงูุจ {topic} ูุน ุงูุฅุดุงุฑุฉ ุฅูู ุงูุฏุฑุงุณุงุช ูุงูุฃุจุญุงุซ ุฐุงุช ุงูุตูุฉ.")
            
        conclusion = f"ุงูุฎูุงุตุฉ: ูุชุถุญ ููุง ุณุจู ุฃูููุฉ {topic} ูู ูุฌุงูู. "
        conclusion += f"ูููู ุงูุงุณุชูุงุฏุฉ ูู ุงููุนูููุงุช ุงูููุฏูุฉ ูู ูุฐุง ุงูููุงู ูููู ุฃูุถู ูู {topic} ูุงูุชุนุงูู ูุนู ุจุดูู ุฃูุซุฑ ูุนุงููุฉ."
        
        article = f"# {title}\n\n{intro}\n\n"
        article += "\n\n".join(body_paragraphs)
        article += f"\n\n{conclusion}"
        
        return article
    
    def _generate_report(self, topic: str, paragraphs: int, tone: str) -> str:
        """ุฅูุดุงุก ุชูุฑูุฑ"""
        title = f"ุชูุฑูุฑ ุนู: {topic}"
        
        executive_summary = f"ููุฎุต ุชูููุฐู: ููุฏู ูุฐุง ุงูุชูุฑูุฑ ุชุญูููุงู ุดุงููุงู ูู {topic}. "
        executive_summary += f"ููุฏู ุงูุชูุฑูุฑ ุฅูู ุชูููุฑ ููู ุนููู ููููุถูุน ูุชูุฏูู ุชูุตูุงุช ุนูููุฉ."
        
        sections = []
        sections.append("## ุงูููุฏูุฉ\n" +
                      f"ูุชูุงูู ูุฐุง ุงูุชูุฑูุฑ ููุถูุน {topic} ูุฃูููุชู. " +
                      f"ุณูุชู ุงุณุชุนุฑุงุถ ุงูุฌูุงูุจ ุงููุฎุชููุฉ ููููุถูุน ูุน ุงูุชุฑููุฒ ุนูู ุงูุชุทุจููุงุช ุงูุนูููุฉ.")
        
        sections.append("## ูููุฌูุฉ ุงูุชูุฑูุฑ\n" +
                      f"ุชู ุฌูุน ุงููุนูููุงุช ููุฐุง ุงูุชูุฑูุฑ ูู ูุตุงุฏุฑ ูุชููุนุฉ ูููุซููุฉ. " +
                      f"ุชู ุชุญููู ุงูุจูุงูุงุช ุจุงุณุชุฎุฏุงู ุฃุณุงููุจ ุฅุญุตุงุฆูุฉ ููุงุณุจุฉ.")
        
        for i in range(paragraphs - 4):
            sections.append(f"## ุงููุณู {i+1}\n" +
                          f"ูุนูููุงุช ูุชุญูููุงุช ูุชุนููุฉ ุญูู ุฌุงูุจ ูุญุฏุฏ ูู {topic}. " +
                          f"ุชุณุชูุฏ ุงููุนูููุงุช ุฅูู ุจูุงูุงุช ุญุฏูุซุฉ ูุชุญูููุงุช ุฏูููุฉ.")
            
        sections.append("## ุงููุชุงุฆุฌ ูุงูุชูุตูุงุช\n" +
                      f"ุจูุงุกู ุนูู ุงูุชุญููู ุงูุณุงุจูุ ูููู ุงุณุชุฎูุงุต ุงููุชุงุฆุฌ ุงูุชุงููุฉ ุจุฎุตูุต {topic}. " +
                      f"ููุง ููุฏู ูุฌููุนุฉ ูู ุงูุชูุตูุงุช ุงูุนูููุฉ ููุชุนุงูู ูุน ุงูููุถูุน ุจุดูู ุฃูุถู.")
        
        report = f"# {title}\n\n{executive_summary}\n\n"
        report += "\n\n".join(sections)
        
        return report
    
    def _generate_social_post(self, topic: str, tone: str) -> str:
        """ุฅูุดุงุก ููุดูุฑ ููุณุงุฆู ุงูุชูุงุตู ุงูุงุฌุชูุงุนู"""
        if tone == "formal":
            post = f"ุฅูููู ูุนูููุงุช ูููุฉ ุญูู {topic}. "
            post += f"ูู ุงูููู ุงูุฅุดุงุฑุฉ ุฅูู ุฃู {topic} ููุนุจ ุฏูุฑุงู ูููุงู ูู ูุฌุงูู. "
            post += f"ูุฑุญุจ ุจุขุฑุงุฆูู ูุชุนูููุงุชูู ุญูู ูุฐุง ุงูููุถูุน. #ูุนูููุงุช_ูููุฏุฉ #{topic.replace(' ', '_')}"
        elif tone == "casual":
            post = f"ูู ุชุนุฑู ูุง ูู {topic}ุ ๐ "
            post += f"ุฅููู ุจุนุถ ุงููุนูููุงุช ุงููุซูุฑุฉ ููุงูุชูุงู! "
            post += f"ุดุงุฑููุง ุฑุฃูู ูู ุงูุชุนูููุงุช ๐ #ุงุนุฑู_ุฃูุซุฑ #{topic.replace(' ', '_')}"
        else:
            post = f"ูุดุงุฑูุฉ ูุนูููุงุชูุฉ ุนู {topic}. "
            post += f"ูุนุชุจุฑ {topic} ูู ุงูููุงุถูุน ุงููููุฉ ุงูุชู ุชุณุชุญู ุงูุงูุชูุงู. "
            post += f"ุชุงุจุนููุง ูููุฒูุฏ ูู ุงููุนูููุงุช ุงููููุฏุฉ. #{topic.replace(' ', '_')}"
            
        return post
    
    def _generate_general_content(self, topic: str, paragraphs: int, tone: str) -> str:
        """ุฅูุดุงุก ูุญุชูู ุนุงู"""
        title = f"ูุนูููุงุช ุนู: {topic}"
        
        content_paragraphs = []
        for i in range(paragraphs):
            if i == 0:
                content_paragraphs.append(f"ููุฏูุฉ: {topic} ูู ููุถูุน ูุณุชุญู ุงูุฏุฑุงุณุฉ ูุงูุงูุชูุงู. "
                                         f"ุณููุฏู ูู ูุฐุง ุงููุญุชูู ูุนูููุงุช ูููุฏุฉ ููุชููุนุฉ ุญูู ูุฐุง ุงูููุถูุน.")
            elif i == paragraphs - 1:
                content_paragraphs.append(f"ุฎุชุงูุงูุ ูููู ุงูููู ุฅู {topic} ููุซู ุฌุงูุจุงู ูููุงู ูู ูุฌุงูู. "
                                         f"ุงููุนูููุงุช ุงูููุฏูุฉ ุชุณุงุนุฏ ุนูู ููู ุฃูุถู ููููุถูุน ูุงุณุชุฎุฏุงูู ุจุดูู ูุนุงู.")
            else:
                content_paragraphs.append(f"ูุนูููุงุช ุฅุถุงููุฉ ุนู {topic} ูููููุฉ ุงูุงุณุชูุงุฏุฉ ููู. "
                                         f"ููุงู ุฌูุงูุจ ูุชุนุฏุฏุฉ ููุฐุง ุงูููุถูุน ุชุณุชุญู ุงูุงุณุชูุดุงู ูุงูุฏุฑุงุณุฉ.")
                
        content = f"# {title}\n\n"
        content += "\n\n".join(content_paragraphs)
        
        return content